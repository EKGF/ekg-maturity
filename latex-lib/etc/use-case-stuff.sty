%
% Some generic macros dealing with use cases, to be imported in more specific packages
%
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{use-case-stuff}[2019/10/01 agnos.ai - Some generic macros dealing with use cases, to be imported in more specific packages]

\RequirePackage{link-stuff}
\RequirePackage[abspath]{currfile}
\usepackage{luacode} % for luacode environment and \luastring macro

%% Lua-side code
\begin{luacode}
  function myreplace(s,a,b)
    x = string.gsub(s,a,b)
    tex.sprint ( x )
  end
\end{luacode}

\newcommand{\usecaseLabelNoPrefix}[1]{%
  \directlua{%
    myreplace(\luastring{#1},\luastring{uc:},\luastring{})
  }%
}

%
% Call \getUseCaseDirectoryName{\usecaseLabel} to derive the directory name from it and store it in \usecaseDirectoryName
%
\newcommand{\getUseCaseDirectoryName}[1]{%
  \global\edef\usecaseDirectoryName{\usecaseLabelNoPrefix{#1}}%
}

%
% New macro for all references to a use case
%
\newcommandx{\usecaseref}[1]{%
  \iflabelexists{#1}{%
    \textit{\nameref{#1}} {\tiny (\ref{#1} on page \pageref{#1})}%
  }{%
    \typeout{use-case-stuff.sty: usecaseref #1 at \currfilename:\the\inputlineno}
    \readUseCaseTitleFromFile{#1}%
    \usecaseTitle {\tiny (not documented in this document)}%
    \typeout{use-case-stuff.sty: usecaseref #1 b}
  }%
}

\newcommand*{\usecaseTitleFileName}{}

\newread\titleFileIn % declaring a file handle called 'titleFileIn'

%
% Private function do not use.
% Does the actual reading of the title file for a given use case.
%
% See https://latexref.xyz/_005cread.html
%
\newcommand*{\privateDoTheActualRead}[1]{
  \typeout{use-case-stuff.sty: reading \usecaseTitleFileName}
  \openin\titleFileIn=#1\relax
  \typeout{use-case-stuff.sty: title file handle is \the\titleFileIn}
  \read\titleFileIn to\usecaseTitle
  \closein\titleFileIn
}

%
% Reads the title for the given use case from a file called <use case directory>/<use case name>-title.txt
% and stores it in the global variable \usecaseTitle
%
\newcommand*{\readUseCaseTitleFromFile}[1]{%
  \global\edef\usecaseLabel{#1}%
  \typeout{use-case-stuff.sty: label=\usecaseLabel}
  \getUseCaseDirectoryName{#1}%
  \global\edef\usecaseTitleFileName{../use-cases/\usecaseDirectoryName/\usecaseDirectoryName-title.txt}%
  \typeout{use-case-stuff.sty: title file=\usecaseTitleFileName}%
  \global\edef\usecaseTitle{Unknown Title}%
  \IfFileExists{\usecaseTitleFileName}{%
    \privateDoTheActualRead{\usecaseTitleFileName}%
  }{%
    \global\edef\usecaseTitleFileName{../\usecaseTitleFileName}%
    \IfFileExists{\usecaseTitleFileName}{%
      \privateDoTheActualRead{\usecaseTitleFileName}%
    }{%
      \typeout{use-case-stuff.sty: File {\usecaseTitleFileName} not found}%
    }%
  }%
  \typeout{use-case-stuff.sty: title=\usecaseTitle}%
}

